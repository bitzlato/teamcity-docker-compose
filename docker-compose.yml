version: '3.8'

networks:
  teamcity:
    driver: bridge
#    external: true

volumes:
    teamcity_data:
    agent1_work:
    agent2_work:
    agent3_work:
    agent1_temp:
    agent2_temp:
    agent3_temp:
    docker_data:

x-agent-env: &agent-env
  SERVER_URL: http://teamcity-server:8111

x-agent: &agent
  image: jetbrains/teamcity-agent:latest
  dns:
    - 8.8.8.8
  restart: unless-stopped
  networks:
    - teamcity
  labels:
    org.label-schema.group: "ci"

services:
  teamcity-server:
    image: jetbrains/teamcity-server:latest
    user: "0"
    container_name: teamcity-server
    volumes:
      - teamcity_data:/data/teamcity_server/datadir
    restart: unless-stopped
    depends_on:
      - postgresql
    ports:
      - 8111:8111
    networks:
      - teamcity
    labels:
      org.label-schema.group: "ci"

  teamcity-agent1:
    <<: *agent
    environment:
      <<: *agent-env
      AGENT_NAME: agent-1
    volumes:
      - docker_data:/var/lib/docker
      - /var/run/docker.sock:/var/run/docker.sock
      - agent1_work:/opt/buildagent/work
      - ./buildagent1/temp:/opt/buildagent/temp

  teamcity-agent2:
    <<: *agent
    environment:
      <<: *agent-env
      AGENT_NAME: agent-2
    volumes:
      - docker_data:/var/lib/docker
      - /var/run/docker.sock:/var/run/docker.sock
      - ./buildagent2/work:/opt/buildagent/work
      - ./buildagent2/temp:/opt/buildagent/temp

  teamcity-agent3:
    <<: *agent
    environment:
      <<: *agent-env
      AGENT_NAME: agent-3
    volumes:
      - docker_data:/var/lib/docker
      - /var/run/docker.sock:/var/run/docker.sock
      - ./buildagent3/work:/opt/buildagent/work
      - ./buildagent3/temp:/opt/buildagent/temp

  postgresql:
    image: postgres:latest
    container_name: database
    shm_size: 1g
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: teamcity
      POSTGRES_PASSWORD: teamcity
      POSTGRES_DB: teamcity
    restart: unless-stopped
    expose:
      - 5432
    networks:
      - teamcity
